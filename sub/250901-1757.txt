#profile-title:ChiliVPN
#profile-update-interval: 1
--------------------------
vless://1a714fa1-247b-4755-87d0-32c46d3fdc14@94.141.123.233:443?security=reality&encryption=none&pbk=vfmqSXTEjdIOgz43eZTNzBRztAvd1U1dDkSz_mnaSk4&host=Join---i10VPN---Join---i10VPN---Join---i10VPN---Join---i10VPN&headerType=none&fp=chrome&type=tcp&flow=xtls-rprx-vision&sni=cdnjs.com&sid=bc97736f81817c41#1-Chili-🌶-VPN-A
vless://d5c1b5d7-055b-4457-bc3a-6e99919c1bcb@94.131.104.178:443/?security=reality&encryption=none&pbk=LDEOpY1G4Cw1drC2ao9AQRSTwwhTTMDk5a7Kyw41Hlw&headerType=none&fp=firefox&spx=%2F&type=tcp&flow=xtls-rprx-vision&sni=latvia6.clearorbitllc.com&sid=81e0b568#2-Chili-🌶-VPN-A
vless://43fbd4b6-0e35-4b6f-9ed2-8fe95be28bf5@91.99.117.29:443?mode=stream-one&path=%2Fsc%3Fed%3D2048%40i10VPN&security=none&encryption=none&type=xhttp#3-Chili🌶VPN-B
vless://1a714fa1-247b-4755-87d0-32c46d3fdc14@194.87.29.240:443?security=reality&encryption=none&pbk=vfmqSXTEjdIOgz43eZTNzBRztAvd1U1dDkSz_mnaSk4&host=Join---i10VPN---Join---i10VPN---Join---i10VPN---Join---i10VPN&headerType=none&fp=chrome&type=tcp&flow=xtls-rprx-vision&sni=cdnjs.com&sid=bc97736f81817c41#4-Chili🌶VPN-B
vless://f0758892-f40c-412d-9fab-88103bad1fd8@51.38.232.101:80?security=&type=ws&path=/vless/&host=Join---PLANB-PROXY&encryption=none#5-Chili🌶VPN-C
vless://031fe63c-f7da-40b7-960d-1101df6eda60@mstr.fastly80.hosting-ip.com:80?security=&type=ws&path=/admin&host=Gn8656.io&encryption=none#6-Chili🌶VPN-C
