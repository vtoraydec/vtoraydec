#profile-title:ChiliVPN
#profile-update-interval: 1
--------------------------
vless://1ae544de-4b19-4bd0-a7d6-e47e2e19a057@itmi-wzxrxkdhbjpnprhkkpplsjwawhssvollvxzdhqshiqckwdgrdm.orbnet.xyz:443?encryption=none&flow=xtls-rprx-vision&security=reality&sni=itgetsbetter.org&fp=chrome&pbk=u13aSU1om7Mc67RxQHmVQx7iALWAUCn_j38zQ5LpYXc&sid=462c73aef9f448&type=tcp&headerType=none#1-Chili🌶VPN
vless://ea58dac7-6ca9-448a-aeff-af1ac5070acf@fin01-vlr01.tcp-reset-club.net:443?encryption=none&flow=xtls-rprx-vision&security=reality&sni=hls-svod.itunes.apple.com&fp=chrome&pbk=mLmBhbVFfNuo2eUgBh6r9-5Koz9mUCn3aSzlR6IejUg&sid=86e999a2cdc2&type=tcp&headerType=none#2-Chili🌶VPN
vless://e999db7a-1b17-4da6-bc37-c9fa24af2e93@ipw.gfdv54cvghhgfhgj-njhgj64.info:2096?encryption=none&security=tls&sni=G9j2KeHn0E.gItI5.oRg&fp=random&type=ws&host=G9j2KeHn0E.gItI5.oRg&path=%2F#3-Chili🌶VPN
vless://ccbe6b7c-9264-40c4-8bc1-ef8f6205d7a4@www.speedtest.net:8443?encryption=none&security=tls&sni=lease-11.access.name.ng&fp=chrome&type=ws&host=lease-11.access.name.ng&path=%2F#4-Chili🌶VPN
vless://aaaaaaa1-bbbb-4ccc-accc-eeeeeeeeeee1@freexxx.ndeso.web.id:443?encryption=none&security=tls&sni=freexxx.ndeso.web.id&fp=chrome&type=ws&host=freexxx.ndeso.web.id&path=%2FFree-CF-Proxy-AT4#5-Chili🌶VPN
vless://aaaaaaa1-bbbb-4ccc-accc-eeeeeeeeeee1@freexxx.ndeso.web.id:443?encryption=none&security=tls&sni=freexxx.ndeso.web.id&fp=random&type=ws&host=freexxx.ndeso.web.id&path=%2FFree-CF-Proxy-AT33#6-Chili🌶VPN
